'use client'

import { useEffect, useRef } from 'react'
import { useSetProducts, useSetError } from '@/stores/product-store'
import type { ProductClient } from '@/lib/validations/product/client'

interface ProductsStoreInitializerProps {
    initialProducts: ProductClient[] | null
}

export default function ProductsStoreInitializer({
                                                     initialProducts
                                                 }: ProductsStoreInitializerProps) {
    const setProducts = useSetProducts()
    const setError = useSetError()
    const initialized = useRef(false)

    useEffect(() => {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        if (initialized.current) return

        if (initialProducts && initialProducts.length > 0) {
            console.log('üè™ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º products store —Å', initialProducts.length, '—Ç–æ–≤–∞—Ä–∞–º–∏')
            setProducts(initialProducts)
            initialized.current = true
        } else {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–ª—è store')
            setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã')
        }
    }, [initialProducts, setProducts, setError])

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ–≤–∏–¥–∏–º—ã–π - –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç –Ω–∏—á–µ–≥–æ
    return null
}